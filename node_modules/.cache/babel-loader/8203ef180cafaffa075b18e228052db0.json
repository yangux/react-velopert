{"ast":null,"code":"var _jsxFileName = \"/Users/sy/react-2021/react-velopert/src/124-EventPractice.js\";\nimport React, { Component } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass EventPractice extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      username: '',\n      message: ''\n    };\n\n    this.handleChange = e => {\n      this.setState({\n        // ** 객체 안에서 key를 []로 감싸면 참조 값이 key 값으로 사용된다!\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.handleClick = () => {\n      alert(this.state.username + ': ' + this.state.message);\n      this.setState({\n        username: '',\n        message: ''\n      });\n    };\n\n    this.handleKeyPress = e => {\n      if (e.key === 'Enter') {\n        this.handleClick();\n      }\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"\\uC774\\uBCA4\\uD2B8 \\uC5F0\\uC2B5\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"username\",\n        placeholder: \"\\uC0AC\\uC6A9\\uC790\\uBA85\",\n        value: this.state.username,\n        onChange: this.handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"message\",\n        placeholder: \"\\uC544\\uBB34\\uAC70\\uB098 \\uC785\\uB825\\uD574 \\uBCF4\\uC138\\uC694\",\n        value: this.state.message,\n        onChange: this.handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.handleClick,\n        children: \"\\uD655\\uC778\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default EventPractice;","map":{"version":3,"sources":["/Users/sy/react-2021/react-velopert/src/124-EventPractice.js"],"names":["React","Component","EventPractice","state","username","message","handleChange","e","setState","target","name","value","handleClick","alert","handleKeyPress","key","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;AAEA,MAAMC,aAAN,SAA4BD,SAA5B,CAAsC;AAAA;AAAA;AAAA,SACpCE,KADoC,GAC5B;AACNC,MAAAA,QAAQ,EAAE,EADJ;AAENC,MAAAA,OAAO,EAAE;AAFH,KAD4B;;AAAA,SAMpCC,YANoC,GAMpBC,CAAD,IAAO;AACpB,WAAKC,QAAL,CAAc;AACZ;AACA,SAACD,CAAC,CAACE,MAAF,CAASC,IAAV,GAAiBH,CAAC,CAACE,MAAF,CAASE;AAFd,OAAd;AAID,KAXmC;;AAAA,SAapCC,WAboC,GAatB,MAAM;AAClBC,MAAAA,KAAK,CAAC,KAAKV,KAAL,CAAWC,QAAX,GAAsB,IAAtB,GAA6B,KAAKD,KAAL,CAAWE,OAAzC,CAAL;AACA,WAAKG,QAAL,CAAc;AACZJ,QAAAA,QAAQ,EAAE,EADE;AAEZC,QAAAA,OAAO,EAAE;AAFG,OAAd;AAID,KAnBmC;;AAAA,SAqBpCS,cArBoC,GAqBlBP,CAAD,IAAO;AACtB,UAAIA,CAAC,CAACQ,GAAF,KAAU,OAAd,EAAuB;AACrB,aAAKH,WAAL;AACD;AACF,KAzBmC;AAAA;;AA2BpCI,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,IAAI,EAAC,UAFP;AAGE,QAAA,WAAW,EAAC,0BAHd;AAIE,QAAA,KAAK,EAAE,KAAKb,KAAL,CAAWC,QAJpB;AAKE,QAAA,QAAQ,EAAE,KAAKE;AALjB;AAAA;AAAA;AAAA;AAAA,cAFF,eASE;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,IAAI,EAAC,SAFP;AAGE,QAAA,WAAW,EAAC,gEAHd;AAIE,QAAA,KAAK,EAAE,KAAKH,KAAL,CAAWE,OAJpB;AAKE,QAAA,QAAQ,EAAE,KAAKC;AALjB;AAAA;AAAA;AAAA;AAAA,cATF,eAgBE;AAAQ,QAAA,OAAO,EAAE,KAAKM,WAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAhBF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAoBD;;AAhDmC;;AAmDtC,eAAeV,aAAf","sourcesContent":["import React, { Component } from 'react';\n\nclass EventPractice extends Component {\n  state = {\n    username: '',\n    message: '',\n  };\n\n  handleChange = (e) => {\n    this.setState({\n      // ** 객체 안에서 key를 []로 감싸면 참조 값이 key 값으로 사용된다!\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  handleClick = () => {\n    alert(this.state.username + ': ' + this.state.message);\n    this.setState({\n      username: '',\n      message: '',\n    });\n  };\n\n  handleKeyPress = (e) => {\n    if (e.key === 'Enter') {\n      this.handleClick();\n    }\n  };\n\n  render() {\n    return (\n      <div>\n        <h1>이벤트 연습</h1>\n        <input\n          type=\"text\"\n          name=\"username\"\n          placeholder=\"사용자명\"\n          value={this.state.username}\n          onChange={this.handleChange}\n        />\n        <input\n          type=\"text\"\n          name=\"message\"\n          placeholder=\"아무거나 입력해 보세요\"\n          value={this.state.message}\n          onChange={this.handleChange}\n        ></input>\n        <button onClick={this.handleClick}>확인</button>\n      </div>\n    );\n  }\n}\n\nexport default EventPractice;\n"]},"metadata":{},"sourceType":"module"}