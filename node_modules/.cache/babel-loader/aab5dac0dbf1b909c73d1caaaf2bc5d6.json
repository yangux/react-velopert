{"ast":null,"code":"var _jsxFileName = \"/Users/sy/react-2021/react-velopert/src/092-MyComponent.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MyComponent = ({\n  name,\n  children,\n  favoriteNumber\n}) => {\n  // 비구조화 할당 문법 파라미터에 바로 쓰기\n  // const {name, children} = props; // 비구조화 할당 문법\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"props.name: \", name, \", \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 33\n    }, this), \"props.children: \", children, \", \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 41\n    }, this), favoriteNumber, \"\\uC758 PropTypes\\uB97C \\uC9C0\\uC815\\uD569\\uB2C8\\uB2E4.\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 9\n  }, this);\n};\n\n_c = MyComponent;\nMyComponent.defaultProps = {\n  name: '기본이름'\n};\nMyComponent.propTypes = {\n  name: PropTypes.string\n};\nexport default MyComponent;\n\nvar _c;\n\n$RefreshReg$(_c, \"MyComponent\");","map":{"version":3,"sources":["/Users/sy/react-2021/react-velopert/src/092-MyComponent.js"],"names":["React","Component","PropTypes","MyComponent","name","children","favoriteNumber","defaultProps","propTypes","string"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,SAAP,MAAsB,YAAtB;;;AAEA,MAAMC,WAAW,GAAG,CAAC;AAACC,EAAAA,IAAD;AAAOC,EAAAA,QAAP;AAAiBC,EAAAA;AAAjB,CAAD,KAAsC;AAAE;AACxD;AACA,sBACI;AAAA,+BACiBF,IADjB,qBACwB;AAAA;AAAA;AAAA;AAAA,YADxB,sBAEqBC,QAFrB,qBAEgC;AAAA;AAAA;AAAA;AAAA,YAFhC,EAGKC,cAHL;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAOH,CATD;;KAAMH,W;AAWNA,WAAW,CAACI,YAAZ,GAA2B;AACvBH,EAAAA,IAAI,EAAE;AADiB,CAA3B;AAIAD,WAAW,CAACK,SAAZ,GAAwB;AACpBJ,EAAAA,IAAI,EAAEF,SAAS,CAACO;AADI,CAAxB;AAIA,eAAeN,WAAf","sourcesContent":["import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\n\nconst MyComponent = ({name, children, favoriteNumber}) => { // 비구조화 할당 문법 파라미터에 바로 쓰기\n    // const {name, children} = props; // 비구조화 할당 문법\n    return (\n        <div>\n            props.name: {name}, <br />\n            props.children: {children}, <br />\n            {favoriteNumber}의 PropTypes를 지정합니다.\n        </div>\n    )\n}\n\nMyComponent.defaultProps = {\n    name: '기본이름'\n}\n\nMyComponent.propTypes = {\n    name: PropTypes.string\n}\n\nexport default MyComponent;"]},"metadata":{},"sourceType":"module"}